{"ast":null,"code":"import useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useMemo } from 'react';\nimport Select from '../../select';\nimport { ColorFormat } from '../interface';\nimport ColorAlphaInput from './ColorAlphaInput';\nimport ColorHexInput from './ColorHexInput';\nimport ColorHsbInput from './ColorHsbInput';\nimport ColorRgbInput from './ColorRgbInput';\nconst selectOptions = [ColorFormat.hex, ColorFormat.hsb, ColorFormat.rgb].map(format => ({\n  value: format,\n  label: format.toLocaleUpperCase()\n}));\nconst ColorInput = props => {\n  const {\n    prefixCls,\n    format,\n    value,\n    onFormatChange,\n    onChange\n  } = props;\n  const [colorFormat, setColorFormat] = useMergedState(ColorFormat.hex, {\n    value: format,\n    onChange: onFormatChange\n  });\n  const colorInputPrefixCls = `${prefixCls}-input`;\n  const handleFormatChange = newFormat => {\n    setColorFormat(newFormat);\n  };\n  const steppersNode = useMemo(() => {\n    const inputProps = {\n      value,\n      prefixCls,\n      onChange\n    };\n    switch (colorFormat) {\n      case ColorFormat.hsb:\n        return /*#__PURE__*/React.createElement(ColorHsbInput, Object.assign({}, inputProps));\n      case ColorFormat.rgb:\n        return /*#__PURE__*/React.createElement(ColorRgbInput, Object.assign({}, inputProps));\n      case ColorFormat.hex:\n      default:\n        return /*#__PURE__*/React.createElement(ColorHexInput, Object.assign({}, inputProps));\n    }\n  }, [colorFormat, prefixCls, value, onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${colorInputPrefixCls}-container`\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: colorFormat,\n    bordered: false,\n    getPopupContainer: current => current,\n    popupMatchSelectWidth: 68,\n    placement: \"bottomRight\",\n    onChange: handleFormatChange,\n    className: `${prefixCls}-format-select`,\n    size: \"small\",\n    options: selectOptions\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: colorInputPrefixCls\n  }, steppersNode), /*#__PURE__*/React.createElement(ColorAlphaInput, {\n    prefixCls: prefixCls,\n    value: value,\n    onChange: onChange\n  }));\n};\nexport default ColorInput;","map":{"version":3,"names":["useMergedState","React","useMemo","Select","ColorFormat","ColorAlphaInput","ColorHexInput","ColorHsbInput","ColorRgbInput","selectOptions","hex","hsb","rgb","map","format","value","label","toLocaleUpperCase","ColorInput","props","prefixCls","onFormatChange","onChange","colorFormat","setColorFormat","colorInputPrefixCls","handleFormatChange","newFormat","steppersNode","inputProps","createElement","Object","assign","className","bordered","getPopupContainer","current","popupMatchSelectWidth","placement","size","options"],"sources":["C:/Users/Admin/mernStackAppointSystem/frontend/mymernapp/node_modules/antd/es/color-picker/components/ColorInput.js"],"sourcesContent":["import useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useMemo } from 'react';\nimport Select from '../../select';\nimport { ColorFormat } from '../interface';\nimport ColorAlphaInput from './ColorAlphaInput';\nimport ColorHexInput from './ColorHexInput';\nimport ColorHsbInput from './ColorHsbInput';\nimport ColorRgbInput from './ColorRgbInput';\nconst selectOptions = [ColorFormat.hex, ColorFormat.hsb, ColorFormat.rgb].map(format => ({\n  value: format,\n  label: format.toLocaleUpperCase()\n}));\nconst ColorInput = props => {\n  const {\n    prefixCls,\n    format,\n    value,\n    onFormatChange,\n    onChange\n  } = props;\n  const [colorFormat, setColorFormat] = useMergedState(ColorFormat.hex, {\n    value: format,\n    onChange: onFormatChange\n  });\n  const colorInputPrefixCls = `${prefixCls}-input`;\n  const handleFormatChange = newFormat => {\n    setColorFormat(newFormat);\n  };\n  const steppersNode = useMemo(() => {\n    const inputProps = {\n      value,\n      prefixCls,\n      onChange\n    };\n    switch (colorFormat) {\n      case ColorFormat.hsb:\n        return /*#__PURE__*/React.createElement(ColorHsbInput, Object.assign({}, inputProps));\n      case ColorFormat.rgb:\n        return /*#__PURE__*/React.createElement(ColorRgbInput, Object.assign({}, inputProps));\n      case ColorFormat.hex:\n      default:\n        return /*#__PURE__*/React.createElement(ColorHexInput, Object.assign({}, inputProps));\n    }\n  }, [colorFormat, prefixCls, value, onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${colorInputPrefixCls}-container`\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: colorFormat,\n    bordered: false,\n    getPopupContainer: current => current,\n    popupMatchSelectWidth: 68,\n    placement: \"bottomRight\",\n    onChange: handleFormatChange,\n    className: `${prefixCls}-format-select`,\n    size: \"small\",\n    options: selectOptions\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: colorInputPrefixCls\n  }, steppersNode), /*#__PURE__*/React.createElement(ColorAlphaInput, {\n    prefixCls: prefixCls,\n    value: value,\n    onChange: onChange\n  }));\n};\nexport default ColorInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}