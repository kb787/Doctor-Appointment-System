{"ast":null,"code":"import classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport genPurePanel from '../_util/PurePanel';\nimport { ConfigContext } from '../config-provider/context';\nimport Popover from '../popover';\nimport theme from '../theme';\nimport ColorPickerPanel from './ColorPickerPanel';\nimport ColorTrigger from './components/ColorTrigger';\nimport useColorState from './hooks/useColorState';\nimport useStyle from './style/index';\nimport { customizePrefixCls, generateColor } from './util';\nconst ColorPicker = props => {\n  const {\n    value,\n    defaultValue,\n    format,\n    allowClear = false,\n    presets,\n    children,\n    trigger = 'click',\n    open,\n    disabled,\n    placement = 'bottomLeft',\n    arrow = true,\n    style,\n    className,\n    rootClassName,\n    styles,\n    onFormatChange,\n    onChange,\n    onOpenChange,\n    getPopupContainer,\n    autoAdjustOverflow = true\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = useContext(ConfigContext);\n  const {\n    token\n  } = theme.useToken();\n  const [colorValue, setColorValue] = useColorState(token.colorPrimary, {\n    value,\n    defaultValue\n  });\n  const [popupOpen, setPopupOpen] = useMergedState(false, {\n    value: open,\n    postState: openData => !disabled && openData,\n    onChange: onOpenChange\n  });\n  const [colorCleared, setColorCleared] = useState(false);\n  const prefixCls = getPrefixCls('color-picker', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergeRootCls = classNames(rootClassName, {\n    [`${prefixCls}-rtl`]: direction\n  });\n  const mergeCls = classNames(mergeRootCls, className, hashId);\n  const handleChange = (data, type) => {\n    let color = generateColor(data);\n    if (colorCleared) {\n      setColorCleared(false);\n      const hsba = color.toHsb();\n      // ignore alpha slider\n      if (colorValue.toHsb().a === 0 && type !== 'alpha') {\n        hsba.a = 1;\n        color = generateColor(hsba);\n      }\n    }\n    if (!value) {\n      setColorValue(color);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(color, color.toHexString());\n  };\n  const handleClear = clear => {\n    setColorCleared(clear);\n  };\n  const popoverProps = {\n    open: popupOpen,\n    trigger,\n    placement,\n    arrow,\n    rootClassName,\n    getPopupContainer,\n    autoAdjustOverflow\n  };\n  const colorBaseProps = {\n    prefixCls,\n    color: colorValue,\n    allowClear,\n    colorCleared,\n    disabled,\n    presets,\n    format,\n    onFormatChange\n  };\n  useEffect(() => {\n    if (colorCleared) {\n      setPopupOpen(false);\n    }\n  }, [colorCleared]);\n  return wrapSSR( /*#__PURE__*/React.createElement(Popover, Object.assign({\n    style: styles === null || styles === void 0 ? void 0 : styles.popup,\n    onOpenChange: setPopupOpen,\n    content: /*#__PURE__*/React.createElement(ColorPickerPanel, Object.assign({}, colorBaseProps, {\n      onChange: handleChange,\n      onClear: handleClear\n    })),\n    overlayClassName: prefixCls\n  }, popoverProps), children || /*#__PURE__*/React.createElement(ColorTrigger, {\n    open: popupOpen,\n    className: mergeCls,\n    style: style,\n    color: colorValue,\n    prefixCls: prefixCls,\n    disabled: disabled,\n    colorCleared: colorCleared\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ColorPicker.displayName = 'ColorPicker';\n}\nconst PurePanel = genPurePanel(ColorPicker, 'color-picker', /* istanbul ignore next */\nprefixCls => prefixCls, props => Object.assign(Object.assign({}, props), {\n  placement: 'bottom',\n  autoAdjustOverflow: false\n}));\nColorPicker._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default ColorPicker;","map":{"version":3,"names":["classNames","useMergedState","React","useContext","useEffect","useState","genPurePanel","ConfigContext","Popover","theme","ColorPickerPanel","ColorTrigger","useColorState","useStyle","customizePrefixCls","generateColor","ColorPicker","props","value","defaultValue","format","allowClear","presets","children","trigger","open","disabled","placement","arrow","style","className","rootClassName","styles","onFormatChange","onChange","onOpenChange","getPopupContainer","autoAdjustOverflow","getPrefixCls","direction","token","useToken","colorValue","setColorValue","colorPrimary","popupOpen","setPopupOpen","postState","openData","colorCleared","setColorCleared","prefixCls","wrapSSR","hashId","mergeRootCls","mergeCls","handleChange","data","type","color","hsba","toHsb","a","toHexString","handleClear","clear","popoverProps","colorBaseProps","createElement","Object","assign","popup","content","onClear","overlayClassName","process","env","NODE_ENV","displayName","PurePanel","_InternalPanelDoNotUseOrYouWillBeFired"],"sources":["C:/Users/Admin/mernStackAppointSystem/frontend/mymernapp/node_modules/antd/es/color-picker/ColorPicker.js"],"sourcesContent":["import classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport genPurePanel from '../_util/PurePanel';\nimport { ConfigContext } from '../config-provider/context';\nimport Popover from '../popover';\nimport theme from '../theme';\nimport ColorPickerPanel from './ColorPickerPanel';\nimport ColorTrigger from './components/ColorTrigger';\nimport useColorState from './hooks/useColorState';\nimport useStyle from './style/index';\nimport { customizePrefixCls, generateColor } from './util';\nconst ColorPicker = props => {\n  const {\n    value,\n    defaultValue,\n    format,\n    allowClear = false,\n    presets,\n    children,\n    trigger = 'click',\n    open,\n    disabled,\n    placement = 'bottomLeft',\n    arrow = true,\n    style,\n    className,\n    rootClassName,\n    styles,\n    onFormatChange,\n    onChange,\n    onOpenChange,\n    getPopupContainer,\n    autoAdjustOverflow = true\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = useContext(ConfigContext);\n  const {\n    token\n  } = theme.useToken();\n  const [colorValue, setColorValue] = useColorState(token.colorPrimary, {\n    value,\n    defaultValue\n  });\n  const [popupOpen, setPopupOpen] = useMergedState(false, {\n    value: open,\n    postState: openData => !disabled && openData,\n    onChange: onOpenChange\n  });\n  const [colorCleared, setColorCleared] = useState(false);\n  const prefixCls = getPrefixCls('color-picker', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergeRootCls = classNames(rootClassName, {\n    [`${prefixCls}-rtl`]: direction\n  });\n  const mergeCls = classNames(mergeRootCls, className, hashId);\n  const handleChange = (data, type) => {\n    let color = generateColor(data);\n    if (colorCleared) {\n      setColorCleared(false);\n      const hsba = color.toHsb();\n      // ignore alpha slider\n      if (colorValue.toHsb().a === 0 && type !== 'alpha') {\n        hsba.a = 1;\n        color = generateColor(hsba);\n      }\n    }\n    if (!value) {\n      setColorValue(color);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(color, color.toHexString());\n  };\n  const handleClear = clear => {\n    setColorCleared(clear);\n  };\n  const popoverProps = {\n    open: popupOpen,\n    trigger,\n    placement,\n    arrow,\n    rootClassName,\n    getPopupContainer,\n    autoAdjustOverflow\n  };\n  const colorBaseProps = {\n    prefixCls,\n    color: colorValue,\n    allowClear,\n    colorCleared,\n    disabled,\n    presets,\n    format,\n    onFormatChange\n  };\n  useEffect(() => {\n    if (colorCleared) {\n      setPopupOpen(false);\n    }\n  }, [colorCleared]);\n  return wrapSSR( /*#__PURE__*/React.createElement(Popover, Object.assign({\n    style: styles === null || styles === void 0 ? void 0 : styles.popup,\n    onOpenChange: setPopupOpen,\n    content: /*#__PURE__*/React.createElement(ColorPickerPanel, Object.assign({}, colorBaseProps, {\n      onChange: handleChange,\n      onClear: handleClear\n    })),\n    overlayClassName: prefixCls\n  }, popoverProps), children || /*#__PURE__*/React.createElement(ColorTrigger, {\n    open: popupOpen,\n    className: mergeCls,\n    style: style,\n    color: colorValue,\n    prefixCls: prefixCls,\n    disabled: disabled,\n    colorCleared: colorCleared\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ColorPicker.displayName = 'ColorPicker';\n}\nconst PurePanel = genPurePanel(ColorPicker, 'color-picker', /* istanbul ignore next */\nprefixCls => prefixCls, props => Object.assign(Object.assign({}, props), {\n  placement: 'bottom',\n  autoAdjustOverflow: false\n}));\nColorPicker._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default ColorPicker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}