{"ast":null,"code":"import { ColorBlock } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useMemo } from 'react';\nimport Collapse from '../../collapse';\nimport { useLocale } from '../../locale';\nimport { generateColor } from '../util';\nconst {\n  Panel\n} = Collapse;\nconst genPresetColor = list => list.map(value => {\n  value.colors = value.colors.map(generateColor);\n  return value;\n});\nconst isBright = value => {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = value.toRgb();\n  if (a <= 0.5) {\n    return true;\n  }\n  return r * 0.299 + g * 0.587 + b * 0.114 > 192;\n};\nconst ColorPresets = _ref => {\n  let {\n    prefixCls,\n    presets,\n    value: color,\n    onChange\n  } = _ref;\n  const [locale] = useLocale('ColorPicker');\n  const [presetsValue] = useMergedState(genPresetColor(presets), {\n    value: genPresetColor(presets),\n    postState: genPresetColor\n  });\n  const colorPresetsPrefixCls = `${prefixCls}-presets`;\n  const activeKeys = useMemo(() => presetsValue.map(preset => `panel-${preset.label}`), [presetsValue]);\n  const handleClick = colorValue => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(colorValue);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPresetsPrefixCls\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: activeKeys,\n    ghost: true\n  }, presetsValue.map(preset => {\n    var _a;\n    return /*#__PURE__*/React.createElement(Panel, {\n      header: /*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-label`\n      }, preset === null || preset === void 0 ? void 0 : preset.label),\n      key: `panel-${preset === null || preset === void 0 ? void 0 : preset.label}`\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${colorPresetsPrefixCls}-items`\n    }, Array.isArray(preset === null || preset === void 0 ? void 0 : preset.colors) && ((_a = preset.colors) === null || _a === void 0 ? void 0 : _a.length) > 0 ? preset.colors.map(presetColor => /*#__PURE__*/React.createElement(ColorBlock, {\n      key: `preset-${presetColor.toHexString()}`,\n      color: generateColor(presetColor).toRgbString(),\n      prefixCls: prefixCls,\n      className: classNames(`${colorPresetsPrefixCls}-color`, {\n        [`${colorPresetsPrefixCls}-color-checked`]: presetColor.toHexString() === (color === null || color === void 0 ? void 0 : color.toHexString()),\n        [`${colorPresetsPrefixCls}-color-bright`]: isBright(presetColor)\n      }),\n      onClick: () => handleClick(presetColor)\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      className: `${colorPresetsPrefixCls}-empty`\n    }, locale.presetEmpty)));\n  })));\n};\nexport default ColorPresets;","map":{"version":3,"names":["ColorBlock","classNames","useMergedState","React","useMemo","Collapse","useLocale","generateColor","Panel","genPresetColor","list","map","value","colors","isBright","r","g","b","a","toRgb","ColorPresets","_ref","prefixCls","presets","color","onChange","locale","presetsValue","postState","colorPresetsPrefixCls","activeKeys","preset","label","handleClick","colorValue","createElement","className","defaultActiveKey","ghost","_a","header","key","Array","isArray","length","presetColor","toHexString","toRgbString","onClick","presetEmpty"],"sources":["C:/Users/Admin/mernStackAppointSystem/frontend/mymernapp/node_modules/antd/es/color-picker/components/ColorPresets.js"],"sourcesContent":["import { ColorBlock } from '@rc-component/color-picker';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useMemo } from 'react';\nimport Collapse from '../../collapse';\nimport { useLocale } from '../../locale';\nimport { generateColor } from '../util';\nconst {\n  Panel\n} = Collapse;\nconst genPresetColor = list => list.map(value => {\n  value.colors = value.colors.map(generateColor);\n  return value;\n});\nconst isBright = value => {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = value.toRgb();\n  if (a <= 0.5) {\n    return true;\n  }\n  return r * 0.299 + g * 0.587 + b * 0.114 > 192;\n};\nconst ColorPresets = _ref => {\n  let {\n    prefixCls,\n    presets,\n    value: color,\n    onChange\n  } = _ref;\n  const [locale] = useLocale('ColorPicker');\n  const [presetsValue] = useMergedState(genPresetColor(presets), {\n    value: genPresetColor(presets),\n    postState: genPresetColor\n  });\n  const colorPresetsPrefixCls = `${prefixCls}-presets`;\n  const activeKeys = useMemo(() => presetsValue.map(preset => `panel-${preset.label}`), [presetsValue]);\n  const handleClick = colorValue => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(colorValue);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPresetsPrefixCls\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: activeKeys,\n    ghost: true\n  }, presetsValue.map(preset => {\n    var _a;\n    return /*#__PURE__*/React.createElement(Panel, {\n      header: /*#__PURE__*/React.createElement(\"div\", {\n        className: `${colorPresetsPrefixCls}-label`\n      }, preset === null || preset === void 0 ? void 0 : preset.label),\n      key: `panel-${preset === null || preset === void 0 ? void 0 : preset.label}`\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${colorPresetsPrefixCls}-items`\n    }, Array.isArray(preset === null || preset === void 0 ? void 0 : preset.colors) && ((_a = preset.colors) === null || _a === void 0 ? void 0 : _a.length) > 0 ? preset.colors.map(presetColor => /*#__PURE__*/React.createElement(ColorBlock, {\n      key: `preset-${presetColor.toHexString()}`,\n      color: generateColor(presetColor).toRgbString(),\n      prefixCls: prefixCls,\n      className: classNames(`${colorPresetsPrefixCls}-color`, {\n        [`${colorPresetsPrefixCls}-color-checked`]: presetColor.toHexString() === (color === null || color === void 0 ? void 0 : color.toHexString()),\n        [`${colorPresetsPrefixCls}-color-bright`]: isBright(presetColor)\n      }),\n      onClick: () => handleClick(presetColor)\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      className: `${colorPresetsPrefixCls}-empty`\n    }, locale.presetEmpty)));\n  })));\n};\nexport default ColorPresets;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}